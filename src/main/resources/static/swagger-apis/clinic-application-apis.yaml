swagger: "2.0"
info:
  version: "1.0.0"
  title: "B5IT Final Project Clinic Application APIs"
  description: "B5IT Final Project Clinic Application APIs."
host: "127.0.0.1:9409"
schemes:
  - "http"
tags:
  - name: "receptionist"
    description: "all about apis of receptionist."
  - name: "patients-reservations"
    description: "all about apis of patients-reservations."
  - name: "doctors"
    description: "all about apis of doctors."
paths:
  /api/v1/receptionists:
    get:
      tags:
        - "receptionist"
      summary: "find all receptionists."
      description: "find all receptionists."
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
    post:
      tags:
        - "receptionist"
      summary: "create new receptionist."
      description: "create new receptionist."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "receptionistRequest"
          description: "receptionist data"
          required: true
          schema:
            $ref: "#/definitions/CreateReceptionistDto"
      responses:
        200:
          description: "OK"

  /api/v1/receptionists/{id}:
    get:
      tags:
        - "receptionist"
      summary: "find receptionist by id."
      description: "find receptionist by id."
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
    put:
      tags:
        - "receptionist"
      summary: "update receptionist."
      description: "update receptionist."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
        - in: "body"
          name: "receptionistRequest"
          description: "receptionist data"
          required: true
          schema:
            $ref: "#/definitions/UpdateReceptionistDto"
      responses:
        200:
          description: "OK"

  /api/v1/receptionists/{id}/deactivate:
    delete:
      tags:
        - "receptionist"
      summary: "deactivate receptionist."
      description: "deactivate receptionist."
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
      responses:
        200:
          description: "OK"

  /api/v1/receptionists/{id}/activate:
    put:
      tags:
        - "receptionist"
      summary: "activate receptionist."
      description: "activate receptionist."
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
      responses:
        200:
          description: "OK"

  /api/v1/receptionists/{id}/patients-reservations:
    get:
      tags:
        - "patients-reservations"
      summary: "find all patients-reservations by receptionist id."
      description: "find all patients-reservations by receptionist id."
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
    post:
      tags:
        - "patients-reservations"
      summary: "create new patient-reservation."
      description: "create new patient-reservation."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "the receptionist id."
          required: true
          type: "string"
        - in: "body"
          name: "patientReservationRequest"
          description: "patient reservation data"
          required: true
          schema:
            $ref: "#/definitions/CreatePatientReservationDto"
      responses:
        200:
          description: "OK"

  /api/v1/doctors:
    get:
      tags:
        - "doctors"
      summary: "find all doctors."
      description: "find all doctors."
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
    post:
      tags:
        - "doctors"
      summary: "create new doctor."
      description: "create new doctor."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "doctorRequest"
          description: "doctor data"
          required: true
          schema:
            $ref: "#/definitions/CreateDoctorDto"
      responses:
        200:
          description: "OK"

  /api/v1/doctors/{id}:
    put:
      tags:
        - "doctors"
      summary: "update doctor."
      description: "update doctor."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "the doctor id."
          required: true
          type: "string"
        - in: "body"
          name: "doctorRequest"
          description: "doctor data"
          required: true
          schema:
            $ref: "#/definitions/UpdateDoctorDto"
      responses:
        200:
          description: "OK"
    delete:
      tags:
        - "doctors"
      summary: "delete doctor."
      description: "delete doctor."
      parameters:
        - in: "path"
          name: "id"
          description: "the doctor id."
          required: true
          type: "string"
      responses:
        200:
          description: "OK"

definitions:
  CreateReceptionistDto:
    type: "object"
    properties:
      fullName:
        type: "string"
        example: "Sahar Omar Ali"
      gender:
        type: "string"
        enum:
          - "FEMALE"
          - "MALE"
      phone:
        type: "string"
        example: "777666555"
      email:
        type: "string"
        example: "test@email.com"
      userName:
        type: "string"
        example: "sahar"
      password:
        type: "string"
        example: "12345"

  UpdateReceptionistDto:
    type: "object"
    properties:
      fullName:
        type: "string"
        example: "Sahar Omar Ali"
      gender:
        type: "string"
        enum:
          - "FEMALE"
          - "MALE"
      phone:
        type: "string"
        example: "777666555"
      email:
        type: "string"
        example: "test@email.com"

  CreateDoctorDto:
    type: "object"
    properties:
      fullName:
        type: "string"
        example: "DR. Amal Ali Salem"
      gender:
        type: "string"
        enum:
          - "FEMALE"
          - "MALE"
      phone:
        type: "string"
        example: "777666555"
      type:
        type: "string"
        enum:
          - "GENERAL"
      userName:
        type: "string"
        example: "amal"
      password:
        type: "string"
        example: "12345"

  UpdateDoctorDto:
    type: "object"
    properties:
      fullName:
        type: "string"
        example: "DR. Amal Ali Salem"
      gender:
        type: "string"
        enum:
          - "FEMALE"
          - "MALE"
      phone:
        type: "string"
        example: "777666555"
      type:
        type: "string"
        enum:
          - "GENERAL"
      userName:
        type: "string"
        example: "amal"
      password:
        type: "string"
        example: "12345"

  CreatePatientReservationDto:
    type: "object"
    properties:
      fullName:
        type: "string"
        example: "anwar ahmed ali"
      gender:
        type: "string"
        enum:
          - "FEMALE"
          - "MALE"
      age:
        type: integer
        example: 20
      email:
        type: "string"
        example: "test@email.com"
      phone:
        type: "string"
        example: "777666555"
      feeling:
        type: "string"
        example: "she is very sick."